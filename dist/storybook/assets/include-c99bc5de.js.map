{"version":3,"file":"include-c99bc5de.js","sources":["../../../src/components/include/include.ts"],"sourcesContent":["import { customElement, property } from 'lit/decorators.js';\nimport { html } from 'lit';\nimport { requestInclude } from './request';\nimport { watch } from '../../internal/watch';\nimport SolidElement from '../../internal/solid-element';\nimport styles from './include.styles';\nimport type { CSSResultGroup } from 'lit';\n\n/**\n * @summary Includes give you the power to embed external HTML files into the page.\n * @documentation https://solid.union-investment.com/[storybook-link]/include\n * @status stable\n * @since 1.0\n *\n * @event sd-load - Emitted when the included file is loaded.\n * @event {{ status: number }} sd-error - Emitted when the included file fails to load due to an error.\n */\n@customElement('sd-include')\nexport default class SdInclude extends SolidElement {\n  static styles: CSSResultGroup = styles;\n\n  /**\n   * The location of the HTML file to include. Be sure you trust the content you are including as it will be executed as\n   * code and can result in XSS attacks.\n   */\n  @property() src: string;\n\n  /** The fetch mode to use. */\n  @property() mode: 'cors' | 'no-cors' | 'same-origin' = 'cors';\n\n  /**\n   * Allows included scripts to be executed. Be sure you trust the content you are including as it will be executed as\n   * code and can result in XSS attacks.\n   */\n  @property({ attribute: 'allow-scripts', type: Boolean }) allowScripts = false;\n\n  private executeScript(script: HTMLScriptElement) {\n    // Create a copy of the script and swap it out so the browser executes it\n    const newScript = document.createElement('script');\n    [...script.attributes].forEach(attr => newScript.setAttribute(attr.name, attr.value));\n    newScript.textContent = script.textContent;\n    script.parentNode!.replaceChild(newScript, script);\n  }\n\n  @watch('src')\n  async handleSrcChange() {\n    try {\n      const src = this.src;\n      const file = await requestInclude(src, this.mode);\n\n      // If the src changed since the request started do nothing, otherwise we risk overwriting a subsequent response\n      if (src !== this.src) {\n        return;\n      }\n\n      if (!file.ok) {\n        this.emit('sd-error', { detail: { status: file.status } });\n        return;\n      }\n\n      this.innerHTML = file.html;\n\n      if (this.allowScripts) {\n        [...this.querySelectorAll('script')].forEach(script => this.executeScript(script));\n      }\n\n      this.emit('sd-load');\n    } catch {\n      this.emit('sd-error', { detail: { status: -1 } });\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'sd-include': SdInclude;\n  }\n}\n"],"names":["SdInclude","SolidElement","script","newScript","attr","src","file","requestInclude","html","styles","__decorateClass","property","watch","customElement"],"mappings":"igBAkBqB,IAAAA,EAArB,cAAuCC,CAAa,CAApD,aAAA,CAAA,MAAA,GAAA,SAAA,EAUyD,KAAA,KAAA,OAMiB,KAAA,aAAA,EAAA,CAEhE,cAAcC,EAA2B,CAEzC,MAAAC,EAAY,SAAS,cAAc,QAAQ,EACjD,CAAC,GAAGD,EAAO,UAAU,EAAE,QAAQE,GAAQD,EAAU,aAAaC,EAAK,KAAMA,EAAK,KAAK,CAAC,EACpFD,EAAU,YAAcD,EAAO,YACxBA,EAAA,WAAY,aAAaC,EAAWD,CAAM,CACnD,CAGA,MAAM,iBAAkB,CAClB,GAAA,CACF,MAAMG,EAAM,KAAK,IACXC,EAAO,MAAMC,EAAeF,EAAK,KAAK,IAAI,EAG5C,GAAAA,IAAQ,KAAK,IACf,OAGE,GAAA,CAACC,EAAK,GAAI,CACP,KAAA,KAAK,WAAY,CAAE,OAAQ,CAAE,OAAQA,EAAK,MAAO,CAAA,CAAG,EACzD,OAGF,KAAK,UAAYA,EAAK,KAElB,KAAK,cACN,CAAA,GAAG,KAAK,iBAAiB,QAAQ,CAAC,EAAE,QAAkBJ,GAAA,KAAK,cAAcA,CAAM,CAAC,EAGnF,KAAK,KAAK,SAAS,CAAA,MACnB,CACK,KAAA,KAAK,WAAY,CAAE,OAAQ,CAAE,OAAQ,IAAM,CAClD,CACF,CAEA,QAAS,CACA,OAAAM,gBACT,CACF,EAzDqBR,EACZ,OAAyBS,EAMpBC,EAAA,CAAXC,EAAS,CAAA,EAPSX,EAOP,UAAA,MAAA,CAAA,EAGAU,EAAA,CAAXC,EAAS,CAAA,EAVSX,EAUP,UAAA,OAAA,CAAA,EAM6CU,EAAA,CAAxDC,EAAS,CAAE,UAAW,gBAAiB,KAAM,QAAS,CAAA,EAhBpCX,EAgBsC,UAAA,eAAA,CAAA,EAWnDU,EAAA,CADLE,EAAM,KAAK,CAAA,EA1BOZ,EA2Bb,UAAA,kBAAA,CAAA,EA3BaA,EAArBU,EAAA,CADCG,EAAc,YAAY,CAAA,EACNb,CAAA"}