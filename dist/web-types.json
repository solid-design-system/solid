{
  "$schema": "http://json.schemastore.org/web-types",
  "name": "@union-investment/solid",
  "version": "1.2.5",
  "description-markup": "markdown",
  "framework-config": {
    "enable-when": {
      "node-packages": [
        "@union-investment/solid"
      ]
    }
  },
  "contributions": {
    "html": {
      "elements": [
        {
          "name": "sd-button",
          "description": "",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/button",
          "js": {
            "properties": [
              {
                "name": "formControlController",
                "value": {}
              },
              {
                "name": "hasSlotController",
                "value": {}
              },
              {
                "name": "invalid",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "title",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "variant",
                "description": "The button's theme variant.",
                "value": {
                  "type": "'primary' | 'secondary' | 'tertiary' | 'cta'"
                }
              },
              {
                "name": "inverted",
                "description": "Inverts the button.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "size",
                "description": "The button's size.",
                "value": {
                  "type": "'lg' | 'md' | 'sm'"
                }
              },
              {
                "name": "disabled",
                "description": "Disables the button.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "loading",
                "description": "Draws the button in a loading state.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "type",
                "description": "The type of button. Note that the default value is `button` instead of `submit`, which is opposite of how native\n`<button>` elements behave. When the type is `submit`, the button will submit the surrounding form.",
                "value": {
                  "type": "'button' | 'submit' | 'reset'"
                }
              },
              {
                "name": "name",
                "description": "The name of the button, submitted as a name/value pair with form data, but only when this button is the submitter.\nThis attribute is ignored when `href` is present.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "value",
                "description": "The value of the button, submitted as a pair with the button's name as part of the form data, but only when this\nbutton is the submitter. This attribute is ignored when `href` is present.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "href",
                "description": "When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "target",
                "description": "Tells the browser where to open the link. Only used when `href` is present.",
                "value": {
                  "type": "'_blank' | '_parent' | '_self' | '_top'"
                }
              },
              {
                "name": "download",
                "description": "Tells the browser to download the linked file as this filename. Only used when `href` is present.",
                "value": {
                  "type": "string | undefined"
                }
              },
              {
                "name": "form",
                "description": "The \"form owner\" to associate the button with. If omitted, the closest containing form will be used instead. The\nvalue of this attribute must be an id of a form in the same document or shadow root as the button.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "formAction",
                "description": "Used to override the form owner's `action` attribute.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "formEnctype",
                "description": "Used to override the form owner's `enctype` attribute.",
                "value": {
                  "type": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"
                }
              },
              {
                "name": "formMethod",
                "description": "Used to override the form owner's `method` attribute.",
                "value": {
                  "type": "'post' | 'get'"
                }
              },
              {
                "name": "formNoValidate",
                "description": "Used to override the form owner's `novalidate` attribute.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "formTarget",
                "description": "Used to override the form owner's `target` attribute.",
                "value": {
                  "type": "'_self' | '_blank' | '_parent' | '_top' | string"
                }
              },
              {
                "name": "handleBlur",
                "value": {}
              },
              {
                "name": "handleFocus",
                "value": {}
              },
              {
                "name": "handleClick",
                "value": {}
              },
              {
                "name": "isButton",
                "value": {}
              },
              {
                "name": "isLink",
                "value": {}
              },
              {
                "name": "handleDisabledChange",
                "value": {}
              },
              {
                "name": "click",
                "description": "Simulates a click on the button.",
                "value": {}
              },
              {
                "name": "focus",
                "description": "Sets focus on the button.",
                "value": {}
              },
              {
                "name": "blur",
                "description": "Removes focus from the button.",
                "value": {}
              },
              {
                "name": "checkValidity",
                "description": "Checks for validity but does not show the browser's validation message.",
                "value": {}
              },
              {
                "name": "reportValidity",
                "description": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "value": {}
              },
              {
                "name": "setCustomValidity",
                "description": "Sets a custom validation message. Pass an empty string to restore validity.",
                "value": {}
              }
            ],
            "events": [
              {
                "name": "sd-blur",
                "description": "Emitted when the button loses focus."
              },
              {
                "name": "sd-focus",
                "description": "Emitted when the button gains focus."
              }
            ]
          },
          "attributes": [
            {
              "name": "title",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "The button's theme variant.",
              "value": {
                "type": "'primary' | 'secondary' | 'tertiary' | 'cta'"
              }
            },
            {
              "name": "inverted",
              "description": "Inverts the button.",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "The button's size.",
              "value": {
                "type": "'lg' | 'md' | 'sm'"
              }
            },
            {
              "name": "disabled",
              "description": "Disables the button.",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Draws the button in a loading state.",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "The type of button. Note that the default value is `button` instead of `submit`, which is opposite of how native\n`<button>` elements behave. When the type is `submit`, the button will submit the surrounding form.",
              "value": {
                "type": "'button' | 'submit' | 'reset'"
              }
            },
            {
              "name": "name",
              "description": "The name of the button, submitted as a name/value pair with form data, but only when this button is the submitter.\nThis attribute is ignored when `href` is present.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "value",
              "description": "The value of the button, submitted as a pair with the button's name as part of the form data, but only when this\nbutton is the submitter. This attribute is ignored when `href` is present.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "href",
              "description": "When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "target",
              "description": "Tells the browser where to open the link. Only used when `href` is present.",
              "value": {
                "type": "'_blank' | '_parent' | '_self' | '_top'"
              }
            },
            {
              "name": "download",
              "description": "Tells the browser to download the linked file as this filename. Only used when `href` is present.",
              "value": {
                "type": "string | undefined"
              }
            },
            {
              "name": "form",
              "description": "The \"form owner\" to associate the button with. If omitted, the closest containing form will be used instead. The\nvalue of this attribute must be an id of a form in the same document or shadow root as the button.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "formaction",
              "description": "Used to override the form owner's `action` attribute.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "formenctype",
              "description": "Used to override the form owner's `enctype` attribute.",
              "value": {
                "type": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"
              }
            },
            {
              "name": "formmethod",
              "description": "Used to override the form owner's `method` attribute.",
              "value": {
                "type": "'post' | 'get'"
              }
            },
            {
              "name": "formnovalidate",
              "description": "Used to override the form owner's `novalidate` attribute.",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "formtarget",
              "description": "Used to override the form owner's `target` attribute.",
              "value": {
                "type": "'_self' | '_blank' | '_parent' | '_top' | string"
              }
            }
          ]
        },
        {
          "name": "sd-icon",
          "description": "",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/icon",
          "js": {
            "properties": [
              {
                "name": "svg",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "name",
                "description": "The name of the icon to draw. Available names depend on the icon library being used.",
                "value": {
                  "type": "string | undefined"
                }
              },
              {
                "name": "src",
                "description": "An external URL of an SVG file. Be sure you trust the content you are including, as it will be executed as code and\ncan result in XSS attacks. Only SVGs on a local or CORS-enabled endpoint are supported. If you're using more than one custom icon,\nit might make sense to register a custom icon library.",
                "value": {
                  "type": "string | undefined"
                }
              },
              {
                "name": "label",
                "description": "An alternate description to use for assistive devices. If omitted, the icon will be considered presentational and\nignored by assistive devices.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "library",
                "description": "The name of a registered custom icon library.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "color",
                "description": "The color of the icon.\n\"current\" refers to currentColor and makes it possible to easily style the icon from outside without any CSS variables.",
                "value": {
                  "type": "'currentColor' | 'primary' | 'white'"
                }
              },
              {
                "name": "getUrl",
                "value": {}
              },
              {
                "name": "handleLabelChange",
                "value": {}
              },
              {
                "name": "setIcon",
                "value": {}
              }
            ],
            "events": [
              {
                "name": "sd-load",
                "description": "Emitted when the icon has loaded."
              },
              {
                "name": "sd-error",
                "description": "Emitted when the icon fails to load due to an error."
              }
            ]
          },
          "attributes": [
            {
              "name": "name",
              "description": "The name of the icon to draw. Available names depend on the icon library being used.",
              "value": {
                "type": "string | undefined"
              }
            },
            {
              "name": "src",
              "description": "An external URL of an SVG file. Be sure you trust the content you are including, as it will be executed as code and\ncan result in XSS attacks. Only SVGs on a local or CORS-enabled endpoint are supported. If you're using more than one custom icon,\nit might make sense to register a custom icon library.",
              "value": {
                "type": "string | undefined"
              }
            },
            {
              "name": "label",
              "description": "An alternate description to use for assistive devices. If omitted, the icon will be considered presentational and\nignored by assistive devices.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "library",
              "description": "The name of a registered custom icon library.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "The color of the icon.\n\"current\" refers to currentColor and makes it possible to easily style the icon from outside without any CSS variables.",
              "value": {
                "type": "'currentColor' | 'primary' | 'white'"
              }
            }
          ]
        },
        {
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "description": "Adds an icon to the list of watched icons.",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "description": "Removes an icon from the list of watched icons.",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "description": "Returns a library from the registry.",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "description": "Adds an icon library to the registry, or overrides an existing one.",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "description": "Removes an icon library from the registry.",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "name": "sd-include",
          "description": "",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/include",
          "js": {
            "properties": [
              {
                "name": "src",
                "description": "The location of the HTML file to include. Be sure you trust the content you are including as it will be executed as\ncode and can result in XSS attacks.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "mode",
                "description": "The fetch mode to use.",
                "value": {
                  "type": "'cors' | 'no-cors' | 'same-origin'"
                }
              },
              {
                "name": "allowScripts",
                "description": "Allows included scripts to be executed. Be sure you trust the content you are including as it will be executed as\ncode and can result in XSS attacks.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "executeScript",
                "value": {}
              },
              {
                "name": "handleSrcChange",
                "value": {}
              }
            ],
            "events": [
              {
                "name": "sd-load",
                "description": "Emitted when the included file is loaded."
              },
              {
                "name": "sd-error",
                "description": "Emitted when the included file fails to load due to an error."
              }
            ]
          },
          "attributes": [
            {
              "name": "src",
              "description": "The location of the HTML file to include. Be sure you trust the content you are including as it will be executed as\ncode and can result in XSS attacks.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "mode",
              "description": "The fetch mode to use.",
              "value": {
                "type": "'cors' | 'no-cors' | 'same-origin'"
              }
            },
            {
              "name": "allow-scripts",
              "description": "Allows included scripts to be executed. Be sure you trust the content you are including as it will be executed as\ncode and can result in XSS attacks.",
              "value": {
                "type": "boolean"
              }
            }
          ]
        },
        {
          "description": "Fetches an include file from a remote source. Caching is enabled so the origin is only pinged once.",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/",
          "js": {
            "properties": [],
            "events": []
          },
          "attributes": []
        },
        {
          "name": "sd-link",
          "description": "",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/link",
          "js": {
            "properties": [
              {
                "name": "hasSlotController",
                "value": {}
              },
              {
                "name": "size",
                "description": "The link's size.",
                "value": {
                  "type": "'inherit' | 'lg' | 'sm'"
                }
              },
              {
                "name": "inverted",
                "description": "Inverts the link.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "standalone",
                "description": "Control the layout of icon and text within the component and the component's positioning.",
                "value": {
                  "type": "boolean"
                }
              },
              {
                "name": "href",
                "description": "When not set, the link will render as disabled.",
                "value": {
                  "type": "string"
                }
              },
              {
                "name": "target",
                "description": "Tells the browser where to open the link. Only used when `href` is present.",
                "value": {
                  "type": "'_blank' | '_parent' | '_self' | '_top'"
                }
              },
              {
                "name": "download",
                "description": "Tells the browser to download the linked file as this filename. Only used when `href` is present.",
                "value": {
                  "type": "string | undefined"
                }
              },
              {
                "name": "handleBlur",
                "value": {}
              },
              {
                "name": "handleFocus",
                "value": {}
              },
              {
                "name": "focus",
                "description": "Sets focus on the button.",
                "value": {}
              },
              {
                "name": "blur",
                "description": "Removes focus from the button.",
                "value": {}
              }
            ],
            "events": [
              {
                "name": "sd-blur",
                "description": "Emitted when the link loses focus."
              },
              {
                "name": "sd-focus",
                "description": "Emitted when the link gains focus."
              }
            ]
          },
          "attributes": [
            {
              "name": "size",
              "description": "The link's size.",
              "value": {
                "type": "'inherit' | 'lg' | 'sm'"
              }
            },
            {
              "name": "inverted",
              "description": "Inverts the link.",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "standalone",
              "description": "Control the layout of icon and text within the component and the component's positioning.",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "href",
              "description": "When not set, the link will render as disabled.",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "target",
              "description": "Tells the browser where to open the link. Only used when `href` is present.",
              "value": {
                "type": "'_blank' | '_parent' | '_self' | '_top'"
              }
            },
            {
              "name": "download",
              "description": "Tells the browser to download the linked file as this filename. Only used when `href` is present.",
              "value": {
                "type": "string | undefined"
              }
            }
          ]
        },
        {
          "name": "sd-spinner",
          "description": "",
          "doc-url": "https://solid.union-investment.com/[storybook-link]/spinner",
          "js": {
            "properties": [
              {
                "name": "color",
                "description": "The color color of the spinner.",
                "value": {
                  "type": "'primary' | 'white' | 'currentColor'"
                }
              },
              {
                "name": "localize",
                "value": {}
              }
            ],
            "events": []
          },
          "attributes": [
            {
              "name": "color",
              "description": "The color color of the spinner.",
              "value": {
                "type": "'primary' | 'white' | 'currentColor'"
              }
            }
          ]
        }
      ]
    }
  }
}