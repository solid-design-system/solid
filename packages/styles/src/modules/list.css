/**
 * Generates basic styles for list elements.
 * @name sd-list
 * @status stable
 * @since 1.39.0
 * @boolean sd-list--inverted Inverts the list text.
 */

.sd-list:not(.sd-list--icon),
.sd-prose > :is(ol, ul) {
  list-style-position: revert;
  list-style-type: revert;
  padding: revert;

  @apply text-left py-4 pl-4;

  li:not(:first-child) {
    @apply mt-3;
  }

  ul,
  ol {
    all: revert;
    @apply pl-[1.4em] pt-[0.75em];
  }

  @supports not (-webkit-hyphens: none) {
    /* Safari automatically adds some spacing. This adds it for other browsers. */
    li {
      @apply pl-[0.3em];
    }

    /*
     * Ordered lists
     */

    /* 
   * Safari currently only partially supports the ::marker pseudo class.
   * Support is limited to color and font-size. Therefore we optimize the numbering only for non-Safari browsers.
   * https://developer.mozilla.org/en-US/docs/Web/CSS/::marker#browser_compatibility
   */
    /* Level 1 */
    &:is(ol):not(.sd-list--icon) {
      counter-reset: item;
      > li {
        counter-increment: item;
        &::marker {
          content: counters(item, '.', decimal) '. ';
        }
        /* Level 2 */
        > ol {
          @apply pl-[1.9em];
          counter-reset: subitem;
          > li {
            counter-increment: subitem;
            &::marker {
              content: counters(item, '.', decimal) '.' counters(subitem, '.', decimal) '. ';
            }
            /* Level 3 */
            > ol {
              @apply pl-[2.7em];
              counter-reset: subsubitem;
              > li {
                counter-increment: subsubitem;
                &::marker {
                  content: counters(item, '.', decimal) '.' counters(subitem, '.', decimal) '.'
                    counters(subsubitem, '.', decimal) '. ';
                }
              }
            }
          }
        }
      }
    }
  }

  /*
   * Unordered lists
   */

  /* Level 1 */
  &:is(ul):not(.sd-list--icon),
  ul {
    @apply pl-[0.5em];
    > li {
      @apply pl-[0.75em];
      list-style-type: '\2022'; /* • */
      /* Level 2 */
      > ul {
        @apply pl-[0.3em];
        > li {
          list-style-type: '\002B1D'; /* · */
          /* Level 3 */
          > ul {
            @apply pl-[0.4em];
            > li {
              list-style-type: '\2010'; /* - */
            }
          }
        }
      }
    }
  }
}

/*
  * Icon lists
  */

.sd-list--icon {
  @apply text-left py-4;
  li {
    sd-icon:first-of-type,
    .sd-list--icon__icon:first-of-type {
      @apply text-white;
    }
  }
  /* Safari removes list semantics of lists that don’t look like lists (list-style: none). The only way to remove list
    styles without affecting semantics is to set list-style-type to an empty string.
    https://www.matuzo.at/blog/2023/removing-list-styles-without-affecting-semantics */
  list-style-type: '';

  > li:first-of-type {
    @apply pt-0;
  }

  li {
    @apply relative leading-[32px] pt-3 pl-10;

    > sd-icon:first-of-type,
    > .sd-list--icon__icon:first-of-type {
      @apply absolute left-0 text-3xl text-primary;
    }
  }

  &.sd-list--horizontal {
    @apply flex;
    & li {
      @apply flex pt-0;
    }
    & li:not(:last-child) {
      @apply mr-8;
    }
  }
}

/*
 * Inverted
 */

.sd-list--inverted,
.sd-prose--inverted > :is(ol, ul) {
  @apply text-white-alternative;

  li > sd-icon:first-of-type,
  li > .sd-list--icon__icon:first-of-type {
    @apply text-white-alternative;
  }
}
