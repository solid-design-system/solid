steps:
  - bash: |
      cdnPath=''
      if [[ $(deployment) != "none" ]]; then
        # Get version and create version array
        version=$(node -p "require('./package.json').version")
        echo "Version is $version"
        versionArray=($(echo "$version" | tr '.' ' '))
        echo "Version array is ${versionArray[@]}"

        # Set Azure variables to use in templates
        if [[ $(deployment) == "docs" ]]; then
          cdnPath='/storybook'
          version+=$cdnPath
        fi
        echo "##vso[task.setvariable variable=version]$version"
        echo Azure variable version is "$(version)"

        patchWildcardPath='x.x.x'
        if [[ $(deployment) == "docs" ]]; then
          patchWildcardPath+=${cdnPath}
        fi
        echo "##vso[task.setvariable variable=patchWildcardPath]$patchWildcardPath"
        echo Azure variable patchWildcardPath is "$(patchWildcardPath)"

        majorWildcardPath="${versionArray[0]}.x.x"
        if [[ $(deployment) == "docs" ]]; then
          majorWildcardPath+=${cdnPath}
        fi
        echo "##vso[task.setvariable variable=majorWildcardPath]$majorWildcardPath"
        echo Azure variable majorWildcardPath is "$(majorWildcardPath)"

        minorWildcardPath="${versionArray[0]}.${versionArray[1]}.x"
        if [[ $(deployment) == "docs" ]]; then
          minorWildcardPath+=${cdnPath}
        fi
        echo "##vso[task.setvariable variable=minorWildcardPath]$minorWildcardPath"
        echo Azure variable minorWildcardPath is "$(minorWildcardPath)"

        echo "##vso[task.setvariable variable=cdnPath]$cdnPath"
        echo Azure variable cdnPath is "$(cdnPath)"
      fi
    displayName: 'Set version and wildcard variables'

  ## Deploy to CDN
  - task: AzureCLI@2
    displayName: 'Deploying to Azure Blob Storage'
    inputs:
      azureSubscription: 'Workload CI/CD Service Connection (S_STATICCONTENT_PROD)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        if [[ $(deployment) != "none" ]]; then
          # Deploy to version folder
          set -x
          echo "Target folder is $(version)"
          az storage blob upload-batch \
            --destination \$web \
            --account-name "safesoliddesignsysprod" \
            --source "dist$(cdnPath)" \
            --destination-path "/$(version)" \
            --overwrite
          set +x

          # Deploy to patch wildcard folder
          set -x
          echo "Target folder is x.x.x"
          az storage blob upload-batch \
            --destination \$web \
            --account-name "safesoliddesignsysprod" \
            --source "dist$(cdnPath)" \
            --destination-path "/$(patchWildcardPath)" \
            --overwrite
          set +x

          # Deploy to minor wildcard folder
          set -x
          echo "Target folder is $(minorWildcardPath)"
          az storage blob upload-batch \
            --destination \$web \
            --account-name "safesoliddesignsysprod" \
            --source "dist$(cdnPath)" \
            --destination-path "/$(minorWildcardPath)" \
            --overwrite
          set +x

          # Deploy to major wildcard folder
          set -x
          echo "Target folder is $(majorWildcardPath)"
          az storage blob upload-batch \
            --destination \$web \
            --account-name "safesoliddesignsysprod" \
            --source "dist$(cdnPath)" \
            --destination-path "/$(majorWildcardPath)" \
            --overwrite
          set +x
        fi

  ## Purge CDN for all folders
  - template: purge-cdn.template.yml
