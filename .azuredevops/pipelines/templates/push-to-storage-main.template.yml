parameters:
  - name: destinationPath
    type: string
    default: ''
  - name: sourcePath
    type: string
    default: ''

steps:
  ## Deploy folder to CDN
  - task: AzureCLI@2
    displayName: 'Deploying to Azure Blob Storage'
    inputs:
      azureSubscription: 'Workload CI/CD Service Connection (S_STATICCONTENT_PROD)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        version=$(node -p "require('./package.json').version")
        echo "Version is $version"
        versionArray=($(echo "$version" | tr '.' ' '))
        echo "Version array is ${versionArray[@]}"

        # Deploy to version folder
        set -x
        echo "Target folder is $version"
        az storage blob upload-batch \
          --destination \$web \
          --account-name "safesoliddesignsysprod" \
          --source dist${{parameters.sourcePath}} \
          --destination-path "/$version${{parameters.destinationPath}}" \
          --overwrite
        set +x

        # Deploy to latest folder
        set -x
        echo "Target folder is x.x.x"
        az storage blob upload-batch \
          --destination \$web \
          --account-name "safesoliddesignsysprod" \
          --source dist${{parameters.sourcePath}} \
          --destination-path "/x.x.x${{parameters.destinationPath}}" \
          --overwrite
        set +x

        # Deploy to patch wildcard folder
        set -x
        echo "Target folder is ${versionArray[0]}.${versionArray[1]}.x"
        az storage blob upload-batch \
          --destination \$web \
          --account-name "safesoliddesignsysprod" \
          --source dist${{parameters.sourcePath}} \
          --destination-path "/${versionArray[0]}.${versionArray[1]}.x${{parameters.destinationPath}}" \
          --overwrite
        set +x

        # Deploy to minor wildcard folder
        set -x
        echo "Target folder is ${versionArray[0]}.x.x"
        az storage blob upload-batch \
          --destination \$web \
          --account-name "safesoliddesignsysprod" \
          --source dist${{parameters.sourcePath}} \
          --destination-path "/${versionArray[0]}.x.x${{parameters.destinationPath}}" \
          --overwrite
        set +x

  ## Purge CDN for all folders
  - template: purge-cdn.template.yml
    parameters:
      ## Purge CDN for version folder plus parameterized destination path
      destinationPath: '$version${{parameters.destinationPath}}'

  - template: purge-cdn.template.yml
    parameters:
      destinationPath: 'x.x.x${{parameters.destinationPath}}'

  - template: purge-cdn.template.yml
    parameters:
      destinationPath: '${versionArray[0]}.${versionArray[1]}.x${{parameters.destinationPath}}'

  - template: purge-cdn.template.yml
    parameters:
      destinationPath: '${versionArray[0]}.x.x${{parameters.destinationPath}}'
