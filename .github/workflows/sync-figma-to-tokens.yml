name: Sync Figma variables to tokens

on:
  # Manual run from Actions tab (with inputs)
  workflow_dispatch:
    inputs:
      figma_file_id:
        description: "Figma file/branch id (main file key or branch key). Leave blank to use the secret FIGMA_FILE_ID."
        required: false
        default: ""
      branch_name:
        description: "Branch name to create for the PR"
        required: false
        default: "feat/update-tokens-from-figma"
      pull_request_name:
        description: "Pull Request title"
        required: false
        default: "feat: ✨ Update tokens from Figma"

  # Auto-run on any push (you can narrow later)
  push:
    branches:
      - '**'

  # Optional: also run when PRs are opened/updated against main/develop
  # pull_request:
  #   branches:
  #     - main
  #     - develop

jobs:
  sync-figma-to-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm i

      # Compute safe env vars (no inline '||' in expressions)
      - name: Resolve inputs and fallbacks
        run: |
          # Prefer the manual input; else fallback to secret FIGMA_FILE_ID
          if [ -n "${{ github.event.inputs.figma_file_id }}" ]; then
            echo "FIGMA_FILE_ID=${{ github.event.inputs.figma_file_id }}" >> $GITHUB_ENV
          else
            echo "FIGMA_FILE_ID=${{ secrets.FIGMA_FILE_ID }}" >> $GITHUB_ENV
          fi

          # For push-triggered runs (no inputs), set sensible defaults
          # Use branch name including slashes as part of PR branch to avoid collisions
          DEFAULT_PR_BRANCH="feat/update-tokens-from-figma"
          DEFAULT_PR_TITLE="feat: ✨ Update tokens from Figma"

          if [ -n "${{ github.event.inputs.branch_name }}" ]; then
            echo "PR_BRANCH=${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV
          else
            echo "PR_BRANCH=$DEFAULT_PR_BRANCH" >> $GITHUB_ENV
          fi

          if [ -n "${{ github.event.inputs.pull_request_name }}" ]; then
            echo "PR_TITLE=${{ github.event.inputs.pull_request_name }}" >> $GITHUB_ENV
          else
            echo "PR_TITLE=$DEFAULT_PR_TITLE" >> $GITHUB_ENV
          fi

      - name: Sync variables in Figma file to tokens
        env:
          FIGMA_FILE_ID: ${{ env.FIGMA_FILE_ID }}
          # Keep this exact name — some Figma tooling expects FIGMA_TOKEN
          FIGMA_TOKEN:   ${{ secrets.FIGMA_TOKEN }}
        run: pnpm -C ./packages/tokens fetch:figma && pnpm -C ./packages/tokens build:figma

      - name: Run tests for new tokens
        run: pnpm -C ./packages/tokens build && pnpm -C ./packages/tokens compare

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: Update variables and styles from Figma
          title: ${{ env.PR_TITLE }}
          body: |
            Update tokens from Figma for file/branch id: ${{ env.FIGMA_FILE_ID }}
          branch: ${{ env.PR_BRANCH }}
          # Optional: set reviewers or remove this block
          # reviewers: |
          #   teammate1
          #   teammate2
