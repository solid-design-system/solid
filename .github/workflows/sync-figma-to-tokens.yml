name: Sync Figma variables to tokens

on:
  push:
    branches: [ "main", "develop", "next", "feat/**"]
  workflow_dispatch:

# Add permissions at the workflow level
permissions:
  contents: write
  pull-requests: write

jobs:
  sync-figma-to-tokens:
    runs-on: ubuntu-latest
    env:
      ORIGINAL_BRANCH: ${{ github.ref_name }}
      ARTIFACT_BRANCH: chore/update-figma-tokens-${{ github.ref_name }}-${{ github.run_id }}

    # These will inherit from workflow level but can be overridden if needed
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Important: Use the token with proper permissions
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables
        run: |
          # Set FIGMA_FILE_ID
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.figma_file_id }}" != "" ]]; then
            echo "FIGMA_FILE_ID=${{ github.event.inputs.figma_file_id }}" >> $GITHUB_ENV
          else
            echo "FIGMA_FILE_ID=${{ vars.FIGMA_FILE_ID }}" >> $GITHUB_ENV
          fi
         
          # Set BRANCH_NAME and PR_TITLE based on trigger type
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "BRANCH_NAME=${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV
            echo "PR_TITLE=${{ github.event.inputs.pull_request_name }}" >> $GITHUB_ENV
          else
            # Create unique branch name with timestamp
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            echo "BRANCH_NAME=feat/update-tokens-from-figma-auto-${TIMESTAMP}" >> $GITHUB_ENV
            echo "PR_TITLE=feat: ✨ Update tokens from Figma (auto-sync ${TIMESTAMP})" >> $GITHUB_ENV
          fi

      - name: Validate environment variables
        run: |
          if [ -z "$FIGMA_FILE_ID" ]; then
            echo "❌ FIGMA_FILE_ID is required. Please either:"
            echo "   1. Set the FIGMA_FILE_ID repository variable in Settings → Secrets and variables → Actions → Variables"
            echo "   2. Provide figma_file_id as input when running manually"
            exit 1
          fi
          if [ -z "$BRANCH_NAME" ]; then
            echo "❌ BRANCH_NAME is empty"
            exit 1
          fi
          echo "✅ Using Figma File ID: $FIGMA_FILE_ID"
          echo "✅ Using Branch Name: $BRANCH_NAME"
          echo "✅ Using PR Title: $PR_TITLE"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm i

      - name: Fetch variables from Figma
        run: pnpm -C ./packages/tokens fetch:figma
        env:
          FIGMA_FILE_ID: ${{ env.FIGMA_FILE_ID }}
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}

      - name: Build theme tokens
        run: pnpm -C ./packages/tokens build

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Switch to the artifact branch, commit only if changes exist
      - name: Commit build outputs to artifact branch
        id: commit_step
        run: |
          set -euo pipefail
          git checkout -B "${ARTIFACT_BRANCH}"

          # Stage and commit if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: build artifacts from ${ORIGINAL_BRANCH} (${GITHUB_SHA})"
            git push -u origin "${ARTIFACT_BRANCH}"
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit."
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.commit_step.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.ARTIFACT_BRANCH }}     # head/source (build branch)
          base: ${{ env.ORIGINAL_BRANCH }}       # base/target (original branch)
          title: ${{ env.PR_TITLE }}
          reviewers: smfonseca,auroraVasconcelos,paulovareiro29,mariohamann,balco0110 
          body: |
            Update tokens from Figma for figma file/branch id: ${{ env.FIGMA_FILE_ID }}

            Triggered by: ${{ github.event_name }}
            ${{ github.event_name == 'push' && format('Push to branch: {0}', github.ref_name) || '' }}
