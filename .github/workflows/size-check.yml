name: File Size Check

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions: write-all

jobs:
  file_size_check:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
            node-version: 22

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
            version: 10.17.1
            run_install: false

      - name: Install dependencies
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true pnpm i

      - name: build
        run: cd packages/components && pnpm build

      - name: Calculate package size
        id: calc_size
        run: |
          UNCOMPRESSED=$(cd packages/components && node -e "import('./scripts/node-get-sizes.mjs').then(({ getOutputs }) => { console.log(getOutputs().uncompressed.replace('Bundle size (uncompressed): ', '')); });")
          echo "uncompressed_size=$UNCOMPRESSED" >> $GITHUB_OUTPUT

          GZIP=$(cd packages/components && node -e "import('./scripts/node-get-sizes.mjs').then(({ getOutputs }) => { console.log(getOutputs().gzip.replace('Bundle size (gzipped): ', '')); });")
          echo "gzip_size=$GZIP" >> $GITHUB_OUTPUT

      - name: Uncompressed
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: uncompressed
          conclusion: ${{ job.status }}
          output: |
            {"title":"ℹ️ ${{ steps.calc_size.outputs.uncompressed_size }}", "summary":"${{ steps.calc_size.outputs.uncompressed_size }}"}

      - name: Compressed
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: gzip
          conclusion: ${{ job.status }}
          output: |
            {"title":"ℹ️ ${{ steps.calc_size.outputs.gzip_size }}", "summary":"${{ steps.calc_size.outputs.gzip_size }}"}
